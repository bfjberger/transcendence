version: '3.8'

services:
  nginx:
    container_name: nginx
    build:
      context: .
      dockerfile: Dockerfile.nginx
    restart: unless-stopped
    ports:
      - 80:80
      - 443:443
    networks:
      - ft_transcendance
    volumes:
      - ./frontend/:/var/frontend/
      - ./backend/staticfiles/:/var/backend/staticfiles/
      - ./backend/avatars/:/var/backend/avatars
  bck_django:
    container_name: bck_django
    build:
      context: .
      dockerfile: Dockerfile.django
    restart: on-failure
    ports:
      - 8000
    environment:
      - SECRET_KEY=s'django-insecure-sm@b^=144g8k*vt7gc&&h7q3z7(yf4q=08mdikb=^lrr-18vz2'
      - DJANGO_ALLOWED_HOSTS=localhost 127.0.0.1 10.11.1.2 10.12.8.4 [::1]
      - SQL_ENGINE=django.db.backends.postgresql
      - SQL_DATABASE=db_bck_django
      - SQL_USER=bck_django
      - SQL_PASSWORD=bck_django
      - SQL_HOST=postgres
      - SQL_PORT=5432
      - DATABASE=postgres
      - DJANGO_SUPERUSER_USERNAME=admin
      - DJANGO_SUPERUSER_PASSWORD=admin
      - DJANGO_SUPERUSER_EMAIL=admin@admin.com
    networks:
      - ft_transcendance
    volumes:
      - ./backend/:/usr/backend/
    depends_on:
      - postgres

  postgres:
    image: postgres:latest
    environment:
      - POSTGRES_USER=bck_django
      - POSTGRES_PASSWORD=bck_django
      - POSTGRES_DB=db_bck_django
    ports:
      - 5432
    networks:
      - ft_transcendance
    volumes:
      - postgres_data:/var/lib/postgresql/data/

networks:
    ft_transcendance:
        driver: bridge

volumes:
  postgres_data: